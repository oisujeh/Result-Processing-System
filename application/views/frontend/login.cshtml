@model theceopay.Models.tbluser
@{
    ViewBag.Title = "Member login";
}

<!-- ==========================
        LOGIN - START
    =========================== -->
<section class="content-item grey" id="login">
    <div class="container">
        <div class="row">
            <div class="col-sm-10 col-md-8 col-lg-6 col-sm-offset-1 col-md-offset-2 col-lg-offset-3">
                <div class="form-wrapper">
                    <h4>Sign in</h4>
                    
                      

                            <!-- Login form (not working)-->
                            @if (TempData["msg"] != null)
                            {
                            <div class="alert alert-danger">
                            	@TempData["msg"]
                                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                            </div>
                          
                            }
                            @using (Html.BeginForm("login", "home", FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "loginform" }))
                            {  <div class="text-info">   Don't have an Account? <a href="/home/register">Register</a> | <a href="/home/resetpassword">Forgot Password?</a></div>
                    
                                <fieldset>
                                @Html.ValidationSummary(true, "Invalid username/password", new { @class = "text-danger" })
                                <div class="form-group">
                                    <label for="username" class="col-lg-2 control-label">Username</label>
                                    <div class="col-lg-8">
                                        @Html.TextBoxFor(t => Model.username, new { @class = "form-control", placeholder = "Username" })
                                        @Html.ValidationMessageFor(t => Model.username, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="inputPassword1" class="col-lg-2 control-label">Password</label>
                                    <div class="col-lg-8">

                                        @Html.PasswordFor(t => Model.pwd, new { @class = "form-control", placeholder = "Password" })

                                        @Html.ValidationMessageFor(t => Model.pwd, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-lg-offset-2 col-lg-10">
                                        <button type="submit" class="btn btn-default">Sign in</button>
                                        <button type="reset" class="btn btn-default">Reset</button>
                                    </div>
                                </div>
</fieldset>
                            }
                 
                </div>
            </div>
        </div>
    </div>
</section>
<!-- ==========================
    LOGIN - END
=========================== -->
 


<!-- Page content ends -->


@section Scripts {
    <script type="text/javascript">

        $(document).ready(function () {
            $('#loginform').bootstrapValidator({
                container: '#messages',
                feedbackIcons: {
                    valid: 'glyphicon glyphicon-ok',
                    invalid: 'glyphicon glyphicon-remove',
                    validating: 'glyphicon glyphicon-refresh'
                },
                fields: {
                    
                    username: {
                        validators: {
                            notEmpty: {
                                message: 'The username is required and cannot be empty'
                            }
                            ,
                            stringLength: {
                                min: 3,
                                max: 40,
                                message: 'The username must be less than 100 and above 3 characters long'
                            }
                        }
                    },
                    pwd: {
                        validators: {
                            notEmpty: {
                                message: 'The password is required and cannot be empty'
                            },
                            stringLength: {
                                min: 3,
                                max: 40,
                                message: 'The password must be less than 100 and above 3 characters long'
                            }

                        }
                    }
                    //title: {
                    //    validators: {
                    //        notEmpty: {
                    //            message: 'The title is required and cannot be empty'
                    //        },
                    //        stringLength: {
                    //            max: 100,
                    //            message: 'The title must be less than 100 characters long'
                    //        }
                    //    }
                    //},
                    //content: {
                    //    validators: {
                    //        notEmpty: {
                    //            message: 'The content is required and cannot be empty'
                    //        },
                    //        stringLength: {
                    //            max: 500,
                    //            message: 'The content must be less than 500 characters long'
                    //        }
                    //    }
                    //}
                }
            });
        });
    </script>
}


